select *from stockinfo where marketcap>10000 order by marketcap desc;
cursor.execute(sql)
result = cursor.fetchall()
sql = '''INSERT INTO `codelist` (name, code, sector) VALUES ('{0}', '{1}', '{2}')'''.format(name, code, sector)
sql = '''INSERT INTO `stockinfo` (code, name, marketCap) VALUES ('{0}', '{1}', {2})'''.format(item[0], name, markettot)
SQL = UPDATE day SET  volume_ratio_ever = {0} WHERE id = {1};
1. DELETE
	1) 데이터만 삭제 되고 용량이 줄어들지 않습니다
	2) 삭제한 내용을 되돌릴 수 있습니다
	3) 전체 데이터 혹은 일부만 삭제가 가능합니다
	4) TRUNCATE의 비해 속도가 느립니다
	DELETE [FROM] 테이블 이름 WHERE
[WHERE 조건식];
2. TRUNCATE
	1) 테이블의 초기상태로 되돌립니다
	2) 용량이 줄어들고, 인덱스 등등 도 삭제됩니다
	3) 삭제 후 되돌릴수 없습니다
	4) 전체 삭제만 가능합니다
사용법 : TRUNCATE [테이블명]
사용법 : DELETE TABLE [테이블명]

테이블 구조 복사
CREATE TABLE IF NOT EXISTS `복사 테이블` LIKE `원본 테이블`;
테이블 구조와 데이터 복사
CREATE TABLE IF NOT EXISTS `복사 테이블` SELECT * FROM `원본 테이블`;
테이블 데이터 복사
INSERT INTO `복사 테이블` SELECT * FROM `원본 테이블`;
테이블 데이터 부분 복사
INSERT INTO `복사 테이블` (컬럼1 [, 컬럼2 ...]) SELECT 컬럼1 [, 컬럼2 ...] FROM `원본 테이블`;

#날짜 계산
        date = datetime(2020, 12, 1)

        for j in range(98):
            fromDate = date-timedelta(7)#분봉은 7영업일이면 끊김.
            objStockChart.RequestFromToMinute(result[i]['code'], fromDate.strftime('%Y%m%d'), date.strftime('%Y%m%d'))
            date = fromDate - timedelta(1)
#binary log 파일 삭제
purge binary logs to 'mysql-bin.000038';
PURGE BINARY LOGS TO 'DESKTOP-TEC9DSH-bin.000105';
